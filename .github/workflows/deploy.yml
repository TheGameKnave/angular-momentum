name: Deploy & Release (Web, Desktop, Mobile)

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Build and SonarQube Analysis"]
    types: [completed]
    branches: [main]

permissions:
  contents: write

jobs:
  deploy-web:
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "📦 Web App Version: $VERSION"

      - name: Deploy to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          echo "🚀 Deploying v$VERSION to Heroku..."
          git remote add heroku https://heroku:$HEROKU_API_KEY@git.heroku.com/angular-momentum.git
          git push heroku main:main
          echo "✅ Deployment complete"

  create-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    outputs:
      release_id: ${{ steps.create_release.outputs.release_id }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Get version
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        run: |
          gh release create v${{ steps.version.outputs.version }} \
            --title "Release v${{ steps.version.outputs.version }}" \
            --generate-notes
          echo "release_id=v${{ steps.version.outputs.version }}" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-release:
    needs: create-release
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: |
          cd client
          npm ci

      - name: Build & Release with Tauri Action
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # Tauri updater signing
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

          # macOS signing
          APPLE_CERTIFICATE: ${{ secrets.MAC_CERT }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.MAC_CERT_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

        with:
          projectPath: client
          tauriScript: npx tauri
          releaseId: ${{ needs.create-release.outputs.release_id }}
          tagName: v${{ needs.create-release.outputs.version }}
          releaseName: "v${{ needs.create-release.outputs.version }}"
          releaseBody: "Automated desktop build for Angular Momentum"
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}


  build-mobile:
    if: false
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0

      - name: Get version
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "📦 Mobile App Version: $VERSION"

      - name: Build iOS and Android Apps (Dummy)
        run: |
          echo ""
          echo "📱 [DUMMY] Building mobile apps..."
          echo "   Version: $VERSION"
          sleep 2
          echo "✅ [DUMMY] iOS build complete"
          echo "✅ [DUMMY] Android build complete"

      - name: Submit to App Stores (Dummy)
        run: |
          echo ""
          echo "🍎 [DUMMY] Submitting to Apple App Store..."
          sleep 1
          echo "✅ [DUMMY] Would be submitted to App Store"
          echo ""
          echo "🤖 [DUMMY] Submitting to Google Play Store..."
          sleep 1
          echo "✅ [DUMMY] Would be submitted to Play Store"

  deployment-summary:
    runs-on: ubuntu-latest
    needs: [deploy-web, create-release, build-and-release, build-mobile]
    if: false
    # if: always()
    steps:
      - name: Deployment Summary
        run: |
          echo ""
          echo "════════════════════════════════════════════════════════"
          echo "✅ DUMMY DEPLOYMENT COMPLETE: v$VERSION"
          echo "════════════════════════════════════════════════════════"
          echo ""
          echo "🌐 Web Application: ${{ needs.deploy-web.result }}"
          echo "🖥️  Desktop Applications: ${{ needs.build-desktop.result }}"
          echo "📱 Mobile Applications: ${{ needs.build-mobile.result }}"
          echo "📦 GitHub Release: ${{ needs.create-release.result }}"
          echo ""
          echo "ℹ️  This was a dummy deployment - no actual changes made"
